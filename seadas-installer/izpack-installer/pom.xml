<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>gov.nasa.gsfc.seadas</groupId>
    <artifactId>izpack-installer</artifactId>
    <version>1.2</version>
    <name>SeaDAS Installer</name>

    <!-- seems like this needs to be "jar" to accomplish a build of java code too? a bit confused
    on the difference between putting "pom" and "jar" here. -->
    <packaging>jar</packaging>

    <!-- maven repository where the izpack-maven-plugin  and such live -->
    <repositories>
        <repository>
            <id>codehaus-releases</id>
            <url>https://nexus.codehaus.org/content/repositories/releases</url>
        </repository>
    </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <staging.dir>${project.build.directory}/staging</staging.dir>
    <izpack.version>5.1.3</izpack.version>
    <installer-output-filename>seadas-izpack-installer.jar</installer-output-filename>
  </properties>

    <developers>
        <developer>
            <id>aynur</id>
            <name>Aynur Abdurazik</name>
            <email>aynur.abdurazik@nasa.gov</email>
            <organization>NASA Ocean Ecology Lab</organization>
            <timezone>-4</timezone>
        </developer>
    </developers>

    <!-- must have a dependency on our separate package that contains the custom
    panels -->

    <build>

        <defaultGoal>package</defaultGoal>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.izpack</groupId>
                    <artifactId>izpack-maven-plugin</artifactId>
                    <version>${izpack.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!-- copy all resources to the staging directory. -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${staging.dir}</outputDirectory>

                            <!-- recursive copy of all resource under src/main/izpack. this is the stuff to install as well as install.xml and panel data and such -->
                            <resources>

                                <resource>
                                    <directory>../../../snap-desktop/snap-application/target/snap</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <targetPath>../../src/main/izpack/packs/snap</targetPath>
                                    <filtering>false</filtering>
                                </resource>

                                <resource>
                                    <directory>../../../optical-toolbox/opttbx-kit/target/netbeans_clusters/opttbx
                                    </directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <targetPath>../../src/main/izpack/packs/opttbx</targetPath>
                                    <filtering>false</filtering>
                                </resource>

                                <resource>
                                    <directory>../../../seadas-toolbox/seadas-kit/target/netbeans_clusters/seadas
                                    </directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <targetPath>../../src/main/izpack/packs/seadas</targetPath>
                                    <filtering>false</filtering>
                                </resource>

                                <resource>
                                    <directory>src/main/izpack</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>

                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <!--                <id>copy-resources</id>-->
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <concat destfile="${staging.dir}/packs/snap/etc/snap.properties" append="true">
                                    ${line.separator}snap.context.application.name=SeaDAS
                                </concat>

                                <concat destfile="${staging.dir}/packs/snap/etc/snap.clusters" append="true">
                                    optical-toolbox${line.separator}seadas-toolbox
                                </concat>

                                <concat destfile="${staging.dir}/packs/snap/etc/snap.conf" append="true">
                                    extra_clusters=${extra_clusters}
                                </concat>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>

                    <execution>
                        <!-- copy izpack custom (custom panels, etc.) jars to izpack staging custom -->
                        <id>copy-izpack-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${staging.dir}/custom</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>true</stripVersion>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeArtifactIds>izpack-panels
                            </includeArtifactIds> <!-- IMPORTANT: this causes *only* our custom panels to be copied -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
             We need to tell the izpack-maven-plugin what to use as the base directory (this is our staging area), and also tell it the install file to use:
            -->
            <plugin>
                <groupId>org.codehaus.izpack</groupId>
                <artifactId>izpack-maven-plugin</artifactId>
                <version>${izpack.version}</version>
                <!--       <configuration>-->
                <!--          <descriptorEncoding>UTF-8</descriptorEncoding>-->
                <!--        </configuration>-->
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>izpack</goal>
                        </goals>
                        <configuration>
                            <!-- base for relative paths in izpack descriptor -->
                            <baseDir>${staging.dir}</baseDir>
                            <installFile>${staging.dir}/install.xml</installFile>
                            <output>${project.build.directory}/${installer-output-filename}</output>
                            <finalName>seadas-installer</finalName>
                            <classifier>jar</classifier>
                        </configuration>
                    </execution>
                </executions>
                <!-- must have a dependency here on any code used in the installer, otherwise the classloader
                will not find it.  So in this case we need our panels and then the package that contains the base classes
                for the panels -->
                <!--       <dependencies>-->
                <!--          <dependency>-->
                <!--            <groupId>org.codehaus.izpack</groupId>-->
                <!--            <artifactId>izpack-panel</artifactId>-->
                <!--            <version>${izpack.version}</version>-->
                <!--          </dependency>-->
                <!--          <dependency>-->
                <!--            <groupId>gov.nasa.gsfc.seadas</groupId>-->
                <!--            <artifactId>izpack-panels</artifactId>-->
                <!--            <version>1.0-SNAPSHOT</version>-->
                <!--          </dependency>-->
                <!--        </dependencies>-->
            </plugin>
            <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>1.7.25</version>
                <executions>
                    <execution>
                        <id>l4j-gui</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <jar>target/${installer-output-filename}</jar>
                            <outfile>target/${project.artifactId}.exe</outfile>
                            <classPath>
                                <mainClass>com.izforge.izpack.installer.bootstrap.Installer</mainClass>
                            </classPath>
                            <jre>
                                <bundledJre64Bit>false</bundledJre64Bit>
                                <bundledJreAsFallback>false</bundledJreAsFallback>
                                <minVersion>11.0.11</minVersion>
                                <maxVersion>11.0.19</maxVersion>
                                <jdkPreference>preferJre</jdkPreference>
                                <runtimeBits>32</runtimeBits>
                            </jre>
                            <versionInfo>
                                <fileVersion>1.0.0.0</fileVersion>
                                <txtFileVersion>${project.version}</txtFileVersion>
                                <fileDescription>${project.name}</fileDescription>
                                <copyright>C</copyright>
                                <productVersion>1.0.0.0</productVersion>
                                <txtProductVersion>1.0.0.0</txtProductVersion>
                                <productName>${project.name}</productName>
                                <internalName>SeaDAS</internalName>
                                <originalFilename>${project.artifactId}.exe</originalFilename>
                            </versionInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
